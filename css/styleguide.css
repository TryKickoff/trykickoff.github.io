/** Setup styleguide imports */
/** Colour palette (yeah we're British!) */
/** Forms */
/** Variables ================================= Typography Breakpoints Paths Grid setup Colour palette Components */
/** Typography ================================= Base sizes: Set this in pixels (but do not add px), the font-size mixin will convert to REMS */
/* Font stacks */
/** Breakpoints ================================= There are no common breakpoints so these are just a suggestion You'll need to define your own breakpoints to suit your design */
/** Path vars */
/** Layout setup Settings here override & affect the output in scss/partials/components/grid.scss */
/** Tables Customizes the `.table` component with basic values, each used across all table variations. */
/** App-specific variables ================================= Add common vars below here */
/** Convert pixels to ems For a relational value of 12px write em(12) when the parent is 16px If the parent is another value say 24px write em(12, 24)  Usage: font-size : em(12); font-size : em(12, 24); */
/* ========================================================================== Sass Mixins Vendor Prefixer Responsive CSS3 Utility Mixins hiDpi Forms ========================================================================== */
/* Vendor prefixer */
/* Responsive mixins */
/* ========================================================================== Responsive media query mixins These are used so that we can define separate media-query content for <IE9 and browsers with support for media queries These are directly related to the global $fix-mqs var defined in kickoff-old-ie.scss kickoff-old-ie.scss ignores any content in media-queries with values less than the $fix-mqs var value ========================================================================== */
/* Min-width media query: Equivalent to: @media screen and (min-width: 20em) { ... } Usage: @include respond-min(500) { ... }; Argument is a pixel value WITHOUT a unit of measurement ========================================================================== */
/* Max-width media query: Equivalent to: @media screen and (max-width: 20em) { ... } Usage: @include respond-max(500) { ... }; Argument is a pixel value WITHOUT a unit of measurement ========================================================================== */
/* Min-max-width media query: Equivalent to: @media screen and (min-width: 10em) and (max-width: 20em) { ... } Usage: @include respond-min-max(500, 600) { ... }; Arguments are pixel values WITHOUT a unit of measurement ========================================================================== */
/* Old IE specific mixin Only use this content if we're dealing with old IE Usage: @include oldie() { ... } ========================================================================== */
/* CSS3 */
/** Linear Gradient Usage: @include linear-gradient(#000, #BADA55, horizontal, true); */
/* ========================================================================== Radial Gradient Usage: @include radial-gradient(#000, #BADA55, true); ========================================================================== */
/** vertical-center Vertically center any element. Needs support for CSS tranforms. Usage: @include vertical-center; */
/** Utility mixins Clearfix, REM + fallbacks, @font-face, sizing shortcuts, other helpers */
/* ========================================================================== Utility Mixins ========================================================================== */
/* ========================================================================== Typography mixins ========================================================================== */
/* HiDPI */
/* FORMS */
/* ========================================================================== Styleguide styles ========================================================================== */
body { background-color: #f1f1f1; }

.g-container { padding: 30px; background-color: #fff; margin-top: 3%; margin-bottom: 3%; }

.g-row + .g-row { margin-top: 30px; }

.g-span12 + .g-span12 { margin-top: 30px; }

.well { min-height: 90px; padding: 30px; background-color: #dbdbdb; margin: 30px -30px 50px; color: #333; }

.well--inner { margin-left: 0; margin-right: 0; }

.interfaceType, .section-heading, .typeSpecimen:after { font-family: "Karla", "Helvetica Neue", Helvetica, Arial, sans-serif; }

.section-heading { border-bottom: 1px solid rgba(0, 0, 0, 0.2); padding-bottom: .3em; margin-top: 1em; }

.interfaceType-subtle, .typeSpecimen:after { color: #888; }

/** Masthead */
.masthead, .footer { background-color: slategray; color: #fff; padding: 30px; margin: 0 -30px 30px; }
.masthead h1, .footer h1 { margin-bottom: 0.2em; }
.masthead a, .footer a { color: #fff; border-bottom: 2px dashed rgba(255, 255, 255, 0.3); }
.masthead a:hover, .footer a:hover { border-bottom: 2px solid #fff; }
.masthead :last-child, .footer :last-child { margin-bottom: 0; }

.footer { margin-top: 30px; margin-bottom: -30px; }

.docsNav { margin-bottom: 1em; }
.docsNav li { margin-right: 1em; }
.docsNav .is-active { border-bottom: 2px solid #fff; }

/* Colours ========================================================================== */
.swatch { height: 120px; padding: 15px; margin-bottom: 0.5em; }

.color-text { color: #181830; }
.color-text.bg { background-color: #181830; color: #fff; }
.color-text.bg:after { content: "#181830"; }

.color-background { color: #fff; }
.color-background.bg { background-color: #fff; color: #444; }
.color-background.bg:after { content: "#fff"; }

.color-link { color: #3498db; }
.color-link.bg { background-color: #3498db; color: #fff; }
.color-link.bg:after { content: "#3498db"; }

.color-link-hover { color: #196090; }
.color-link-hover.bg { background-color: #196090; color: #fff; }
.color-link-hover.bg:after { content: "#196090"; }

.color-primary { color: #181830; }
.color-primary.bg { background-color: #181830; color: #fff; }
.color-primary.bg:after { content: "#181830"; }

.color-secondary { color: #FE7C08; }
.color-secondary.bg { background-color: #FE7C08; color: #fff; }
.color-secondary.bg:after { content: "#FE7C08"; }

.color-highlight { color: #ff9600; }
.color-highlight.bg { background-color: #ff9600; color: #fff; }
.color-highlight.bg:after { content: "#ff9600"; }

.typography .info p { -ms-word-wrap: break-word; word-wrap: break-word; }
.typography .example { margin: 1em 0; }
.typography .example h1:after { content: " - modular-scale(20, 3, 1.25)px"; }
.typography .example h2:after { content: " - modular-scale(20, 2, 1.25)px"; }
.typography .example h3:after { content: " - modular-scale(20, 1, 1.25)px"; }
.typography .example h4:after { content: " - modular-scale(20, 0, 1.25)px"; }
.typography .example h5:after { content: " - modular-scale(20, -1, 1.25)px"; }
.typography .example h6:after { content: " - modular-scale(20, -1, 1.25)px"; }
.typography .example h1:after, .typography .example h2:after, .typography .example h3:after, .typography .example h4:after, .typography .example h5:after, .typography .example h6:after { text-transform: lowercase; }
.typography .example .interfaceType:after, .typography .example .section-heading:after, .typography .example .typeSpecimen:after { content: ""; }

.typeSpecimen { margin-bottom: 0; margin-top: 0; -ms-word-wrap: break-word; word-wrap: break-word; }
.typeSpecimen:after { display: block; font-size: 16px; font-size: 0.8rem; margin-top: 5px; border-top: 1px solid #ddd; font-weight: normal; }

h1.typeSpecimen:after { content: "Font stack: purista-web, franklin-gothic-urw, freight-sans-pro, Helvetica Neue, Helvetica, Arial, sans-serif"; }

p.typeSpecimen:after { content: "Font stack: franklin-gothic-urw, freight-sans-pro, Helvetica Neue, Helvetica, Arial, sans-serif"; }

/** Starter page */
.checklistInfo { margin-bottom: 15px; margin-left: 30px; font-size: 17px; }
.checklistInfo li { margin-bottom: 0.2em; }
.checklistInfo code, .checklistInfo pre { font-size: 14px; font-size: 0.7rem; background-color: #cacaca; /* alpha: 1 */ }

/*# sourceMappingURL=styleguide.css.map */
