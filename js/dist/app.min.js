var trak=function(){"use strict";var a=function(a){if(!a){return""}if(!trak.options.clean){return e.call(this,a)}else{return e.call(this,a).toString().replace(/\s|'|"/g,g.delimeter).toLowerCase()}};var b=function(b){var c=f(b);var d=a.call(this,c.category);var e=a.call(this,c.action);var h=a.call(this,c.label);var i=c.eventName;var j=c.value;var k=c.nonInteraction;if(g.trackType==="ga"&&typeof ga!=="undefined"){ga("send","event",d,e,h,j,{nonInteraction:k})}else if(g.trackType==="_gaq"&&typeof _gaq!=="undefined"){_gaq.push(["_trackEvent",d,e,h,j])}else if(g.trackType==="gtm"&&typeof dataLayer!=="undefined"){dataLayer.push({event:i,eventCategory:d,eventAction:e,eventLabel:h,eventValue:j})}if(g.additionalTypes!==undefined){g.additionalTypes()}if(g.debug){console.debug("Debug message:\n Category:",d,"\n Action:",e,"\n Label:",h)}};var c=function(){var a=this.getAttribute("data-trakwithjs")!==null?true:false;if(!a){d.call(this)}};var d=function(){var a=JSON.parse(this.getAttribute("data-trak"));b.call(this,a)};var e=function(a){var b;switch(a){case"page.title":b=document.title;break;case"page.href":b=window.location.href;break;case"link.href":b=this.href;break;case"link.title":b=this.title;break;case"referrer":b=document.referrer?document.referrer:"No referrer";break;default:b=a;break}return b};var f=function(a){return{category:a&&a.category||"",action:a&&a.action||"",label:a&&a.label||"",value:a&&a.value||0,nonInteraction:a&&a.nonInteraction||false,eventName:a&&a.eventName||undefined}};var g={clean:true,delimeter:"_",trackType:"ga",additionalTypes:undefined,debug:false};var h=function(){var a=document.querySelectorAll("[data-trak]");for(var b=0;b<a.length;b++){if(a[b].addEventListener){a[b].addEventListener("click",c)}else if(a[b].attachEvent){a[b].attachEvent("onclick",c)}}};return{start:h,clean:a,event:b,attrEvent:d,wildcard:e,options:g}}();if(typeof define!=="undefined"&&define.amd){define(function(){"use strict";return trak})}else if(typeof module!=="undefined"&&module.exports){module.exports=trak}else{window.trak=trak}(function(a){function b(){var b=window.location.hash,c=a('ul.tabs [href*="'+b+'"]'),d=a(b);if(c.length&&!c.hasClass("is-active")&&d.length){c.closest(".tabs").find(".is-active").removeClass("is-active");c.addClass("is-active");d.show().addClass("is-active").siblings().hide().removeClass("is-active")}}a(window).on("hashchange.skeleton",b);b();a(b)})(jQuery);var TMW=window.TMW||{};(function(a){a(function(){TMW.SiteSetup.init()})})(jQuery);TMW.SiteSetup={init:function(){TMW.Demos.init();TMW.Kickoff.init()}};TMW.Demos={init:function(){this.grids()},grids:function(){$(".show-grid-button").click(function(){if($("body").hasClass("show-grid")){$("body").removeClass("show-grid");$(".show-grid-button").text("Show Grid");console.log("show grid")}else{$("body").addClass("show-grid");$(".show-grid-button").text("Hide Grid");console.log("hide grid")}})}};TMW.Kickoff={init:function(){this.getPackageJSON();trak.start();this.getLatestCommit()},getPackageJSON:function(){var a=this;$.ajax({url:"https://rawgit.com/tmwagency/kickoff/master/package.json",type:"GET",dataType:"json"}).done(function(b){a.setVersion(b.version)})},setVersion:function(a){$(".currentVersion").text(a)},getLatestCommit:function(){var a=this;$.ajax({url:"https://api.github.com/repos/tmwagency/kickoff/commits",type:"GET",dataType:"json"}).done(function(a){console.log("success",a[0].commit);var b='Latest commit: "'+a[0].commit.message+'" by '+a[0].commit.author.name;var c=a[0].commit.url.replace("api.","").replace("repos/","").replace("git/","").replace("commits","commit");$(".latestCommit span").text(b);$(".latestCommit a").attr("href",c)})}};
//# sourceMappingURL=app.min.js.map